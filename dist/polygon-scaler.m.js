import{partition as t,wrap as n,zip as r}from"@thi.ng/transducers";import{intersectLineLine as e}from"@thi.ng/geom-isec";import{isArray as o}from"@thi.ng/checks";function c(r){return t(2,1,n(r,1,!1,!0))}function a(t,n){if(o(n)&&n.length!==t.length)throw new Error("Distances length must be the same length of the polygon.");var a=o(n)?n:t.map(function(t){return n}),i=[].concat(c(t)),h=i.map(function(t){return Math.atan2(t[1][1]-t[0][1],t[1][0]-t[0][0])}),u=[].concat(r(i,h,a)).reduce(function(t,n,r){var e=n[0],o=n[1],c=n[2],a=[-c*Math.sin(o)+e[0][0],c*Math.cos(o)+e[0][1]],i=[-c*Math.sin(o)+e[1][0],c*Math.cos(o)+e[1][1]];return t.push([a,i]),t},[]);return[].concat(c(u)).map(function(t){var n=t[0],r=t[1];return e(n[0],n[1],r[0],r[1]).isec})}export{a as polygonScaler};
//# sourceMappingURL=polygon-scaler.m.js.map
