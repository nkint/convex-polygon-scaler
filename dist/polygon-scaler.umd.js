!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@thi.ng/transducers"),require("@thi.ng/geom-isec"),require("@thi.ng/checks")):"function"==typeof define&&define.amd?define(["exports","@thi.ng/transducers","@thi.ng/geom-isec","@thi.ng/checks"],n):n(e.convexPolygonScaler={},e.transducers,e.geomIsec,e.checks)}(this,function(e,n,t,r){function i(e){return n.partition(2,1,n.wrap(e,1,!1,!0))}e.polygonScaler=function(e,c){if(r.isArray(c)&&c.length!==e.length)throw new Error("Distances length must be the same length of the polygon.");var o=r.isArray(c)?c:e.map(function(e){return c}),s=[].concat(i(e)),a=s.map(function(e){return Math.atan2(e[1][1]-e[0][1],e[1][0]-e[0][0])}),u=[].concat(n.zip(s,a,o)).reduce(function(e,n,t){var r=n[0],i=n[1],c=n[2],o=[-c*Math.sin(i)+r[0][0],c*Math.cos(i)+r[0][1]],s=[-c*Math.sin(i)+r[1][0],c*Math.cos(i)+r[1][1]];return e.push([o,s]),e},[]);return[].concat(i(u)).map(function(e){var n=e[0],r=e[1];return t.intersectLineLine(n[0],n[1],r[0],r[1]).isec})}});
//# sourceMappingURL=polygon-scaler.umd.js.map
